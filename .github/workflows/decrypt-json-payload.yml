name: Decrypt Json Payload

on: 
  workflow_dispatch:

env:
  DEPLOYMENT_NAME: Decrypt Json Payload
  key: ${{ secrets.key }}
  FIELDS_TO_DECRYPT: "consumerKey,consumerSecret"
  FIRST_LEVEL_OBJECT: "credentials"
  FIRST_ITTERATE_OBJECT: "credential"
  
  JSON_DATA: |
    {
      "appId": "562d95e2-9336-4bab-9c45-89bdd87fd5e5",
      "attributes": [
        {
          "name": "DisplayName",
          "value": "test-app"
        }
      ],
      "createdAt": "1694757751084",
      "credentials": [
        {
          "apiProducts": [
            {
              "apiproduct": "github-apiproduct",
              "status": "approved"
            }
          ],
          "consumerKey": {
            "EncryptedValue": "szkeP0E4p7pL+5vmjlmyQu5pcqtXi7XSFG0hPDA6ZEXkzguYp1KqYOPaDFVdwLZ3Ud1FUyiXFFJ5JgRrX178sQ==",
            "IV": "yaVerlxW4+3qfDAxIZazTg=="
          },
          "consumerSecret": {
            "EncryptedValue": "rhonVKGhs/O94CCz5PBmg/oBj0VFExxptPum0lwiZ2xa/rTKqitv4osx6JH4wk72txrC60/Idta6lnMM5r8NZ8UiJHTkLt+ggGGXbx2Bs28=",
            "IV": "Hwrq2r9zs9EeAyEZxkn24A=="
          },
          "expiresAt": "-1",
          "issuedAt": "1694757751130",
          "status": "approved"
        }
      ],
      "developerId": "72d760c2-66dd-4358-b40c-e3ef8eee1e35",
      "lastModifiedAt": "1694757751084",
      "name": "test-app",
      "status": "approved",
      "appFamily": "default"
    }



    
jobs:
  apigee-window-artifacts:
    name: Decrypt Json Payload
    runs-on: ubuntu-latest

    permissions:
      contents: 'read'
      id-token: 'write'

    steps:
      - name: Check out Git repository code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
          token: "${{ secrets.GIT_TOKEN }}"

      - name: Decrypt Json Payload
        shell: pwsh
        run: |
          $env:ORG = "${{ secrets.APIGEE_ORG }}"
          $env:token = "${{ secrets.GIT_TOKEN }}"
          $env:key = "${{ secrets.key }}"
          
          $env:fieldsToDecrypt = $env:FIELDS_TO_DECRYPT
          $env:jsonInput = $env:JSON_DATA
          $env:firstobject = $env:FIRSTLEVELOBJECT
          $env:firstitterateobject = $env:FIRST_ITTERATE_OBJECT
          
          
          # # Pass the JSON_DATA environment variable as input to your script
          # $env:jsonInput = $env:JSON_DATA | ConvertFrom-Json
          # $env:jsonInput | Set-Content -Path "json-input-file.json"

          # Define your GitHub username, repository names, branch names, and file paths
          $env:targetgithubUsername = "pavansirasanambedu"
          $env:repositoryName = "common-encrypt-decrypt"
          $env:targetBranchName = "decrypt/jsonpayload"
          $env:targetFilePath = "decrypt-jsonpaload/decrypt-jsonpaload.json"
          
          # Run your script with Pester
          Invoke-Pester ./decrypt-json-payload.ps1 -Passthru
